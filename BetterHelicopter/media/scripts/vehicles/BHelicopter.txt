module Base
{
	model heliblade1
	{
		mesh = vehicles/blade_1,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade2
	{
		mesh = vehicles/blade_2,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade3
	{
		mesh = vehicles/blade_3,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade4
	{
		mesh = vehicles/blade_4,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade5
	{
		mesh = vehicles/blade_5,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade6
	{
		mesh = vehicles/blade_6,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade7
	{
		mesh = vehicles/blade_7,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade8
	{
		mesh = vehicles/blade_8,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade1Small
	{
		mesh = vehicles/blade_1_small,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade2Small
	{
		mesh = vehicles/blade_2_small,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade3Small
	{
		mesh = vehicles/blade_3_small,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model heliblade4Small
	{
		mesh = vehicles/blade_4_small,
		texture = Vehicles/Vehicle_UH1Interior2,
		scale = 0.01,
		shader = vehiclewheel,
	}
	model BH_helicopter
	{
		mesh = vehicles/Vehicle_helibody3,
		shader = vehicle,
		static = TRUE,
		scale = 0.01,
	}
	vehicle BHelicopter
	{
		mechanicType = 1,
		offRoadEfficiency = 10.2,
		engineRepairLevel = 8,
		playerDamageProtection = 1.2,

		model
		{
			file = BH_helicopter,
			scale = 0.2200,
			offset = 0.0000 -4.5455 0.0000,
		}

		skin
		{
			texture = Vehicles/Vehicle_UH1Interior,
		}

		textureShadow = Shadows/shadowHeli,
		textureMask = Vehicles/Vehicle_UH1Interior_mask,
		spawnOffsetY = 0.24999994,

		sound
		{
			horn = VehicleHorn,
			engine = HeliSilence,
			engineStart = HeliSilence,
		}

		extents = 8.9091 11.0000 27.0909,
		mass = 500,
		centerOfMassOffset = 0.0455 0.9545 0.0000,
		shadowExtents = 8.9545 39.0454,
		shadowOffset = 0.0000 -6.0909,
		physicsChassisShape = 9.0909 10.7273 26.9091,
		engineForce = 15500,
		maxSpeed = 70f,
		engineLoudness = 1200,
		engineQuality = 70,
		brakingForce = 50,
		stoppingMovementForce = 4.0f,
		rollInfluence = 1.0f,
		steeringIncrement = 0.04,
		steeringClamp = 0.3,
		suspensionStiffness = 20,
		suspensionCompression = 4.83,
		suspensionDamping = 3.88,
		maxSuspensionTravelCm = 14,
		suspensionRestLength = 0.20f,
		wheelFriction = 1.4f,
		frontEndHealth = 165,
		rearEndHealth = 130,
		seats = 4,
		template = PassengerSeat4,

		passenger FrontLeft
		{
			position inside
			{
				offset = 2.1818 4.1818 8.2273,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 6.5000 -0.6364 7.6364,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}
		}

		passenger FrontRight
		{
			position inside
			{
				offset = -1.9091 4.0909 8.5455,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -6.0909 -0.4545 7.9545,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}
		}

		passenger RearLeft
		{
			position inside
			{
				offset = 2.0000 4.5000 -1.0000,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 6.3182 -0.4545 -0.2727,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearLeft,
			}
		}

		passenger RearRight
		{
			position inside
			{
				offset = -2.0000 4.2727 -1.0000,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -6.3636 -0.4545 -0.2727,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearRight,
			}
		}

		area Engine
		{
			xywh = 0.0000 15.0909 8.6364 2.9091,
		}

		area TruckBed
		{
			xywh = -0.1364 1.1364 19.2727 10.0000,
		}

		area SeatFrontLeft
		{
			xywh = 6.7727 8.4545 4.7273 5.0000,
		}

		area SeatFrontRight
		{
			xywh = -6.8636 8.3182 4.3636 5.0000,
		}

		area SeatRearLeft
		{
			xywh = 6.1818 0.7273 3.0000 5.1818,
		}

		area SeatRearRight
		{
			xywh = -5.9545 0.7727 2.8182 5.0909,
		}

		area GasTank
		{
			xywh = -5.6818 -5.8636 2.1818 6.6364,
		}

		template = Trunk/part/TruckBedOpen,

		part TruckBedOpen
		{
			container
			{
				capacity = 500,
			}
		}

		template = Seat/part/SeatFrontLeft,
		template = Seat/part/SeatFrontRight,
		template = Seat/part/SeatRearLeft,
		template = Seat/part/SeatRearRight,

		part Seat*
		{
			table install
			{
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
			}
		}

		part GloveBox
		{
			area = SeatFrontRight,
			itemType = Base.GloveBox,
			mechanicRequireKey = true,

			container
			{
				capacity = 7,
				test = Vehicles.ContainerAccess.GloveBox,
			}

			lua
			{
				create = Vehicles.Create.Default,
			}
		}

		template = GasTank,

		part GasTank
		{
			install
			{
				skills = Mechanics:7,
				recipes = Intermediate Mechanics,
			}

			uninstall
			{
				skills = Mechanics:7,
				recipes = Intermediate Mechanics,
			}
		}

		template = Battery,
		template = Engine,
		template = Muffler,

		part Muffler
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = EngineDoor,

		part EngineDoor
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		part Heater
		{
			category = engine,

			lua
			{
				update = Vehicles.Update.Heater,
			}
		}

		part PassengerCompartment
		{
			category = nodisplay,

			lua
			{
				update = Vehicles.Update.PassengerCompartment,
			}
		}

		template = Windshield/part/Windshield,
		template = Windshield/part/WindshieldRear,

		part Windshield*
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = Window/part/WindowFrontLeft,
		template = Window/part/WindowFrontRight,
		template = Brake/part/BrakeRearRight,

		part Brake*
		{
			table install
			{
				skills = Mechanics:6,
				recipes = Motorcycle Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:6,
				recipes = Motorcycle Mechanics,
			}
		}

		part Window*
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = Door/part/DoorFrontLeft,
		template = Door/part/DoorFrontRight,

		part Door*
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = Suspension,

		part Suspension*
		{
			table install
			{
				skills = Mechanics:6,
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:6,
				recipes = Intermediate Mechanics,
			}
		}

		part heliblade
		{
			model blade1
			{
				file = heliblade1,
			}

			model blade2
			{
				file = heliblade2,
			}

			model blade3
			{
				file = heliblade3,
			}

			model blade4
			{
				file = heliblade4,
			}

			model blade5
			{
				file = heliblade5,
			}

			model blade6
			{
				file = heliblade6,
			}

			model blade7
			{
				file = heliblade7,
			}

			model blade8
			{
				file = heliblade8,
			}

			area = Engine,
			category = blade,
			specificItem = false,
			mechanicRequireKey = false,
			repairMechanic = true,

			lua
			{
				create = blade.Create.bladerBig,
				init = blade.Init.bladerBig,
			}
		}

		part helibladeSmall
		{
			model blade1Small
			{
				file = heliblade1Small,
			}

			model blade2Small
			{
				file = heliblade2Small,
			}

			model blade3Small
			{
				file = heliblade3Small,
			}

			model blade4Small
			{
				file = heliblade4Small,
			}

			area = Engine,
			category = blade,
			mechanicRequireKey = false,
			repairMechanic = true,

			lua
			{
				create = blade.Create.bladerSmall,
				init = blade.Init.bladerSmall,
			}
		}

		template = Radio,
		template = Headlight,
	}
}
